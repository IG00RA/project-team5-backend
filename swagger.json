{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "GooseTrack API docs",
    "description": "API documentation for project 'GooseTrack'. [Backend github repository](https://github.com/IG00RA/project-team_5_backend)",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://project-team-5-backend.onrender.com" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    }
  ],

  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],

        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authentication",
        "parameters": [],

        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {}
          },
          "401": {
            "description": "Email or password invalid",
            "content": {}
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/api/user/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get user info",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserInfo"
                }
              }
            }
          },
          "400": {
            "description": "No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          }
        }
      }
    },
    "/api/user/change-profile": {
      "patch": {
        "tags": ["User"],
        "summary": "Change user info",
        "parameters": [],
        "requestBody": {
          "description": "User's change profile object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserInfoRequest"
              }
            }
          }
        },
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "409": {
            "description": "Email already in use by another user",
            "content": {}
          }
        }
      }
    },
    "/api/user/change-avatar": {
      "post": {
        "tags": ["User"],
        "summary": "Upload user avatar",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatarURL": {
                    "type": "string",
                    "format": "binary",
                    "description": "User avatar file"
                  }
                }
              }
            }
          }
        },
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful avatar upload",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "avatarURL": {
                      "type": "string",
                      "description": "Uploaded file URL"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "500": {
            "description": "Unexpected file format",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["userName", "email", "password"],
        "properties": {
          "userName": {
            "type": "string",
            "description": "User's name",
            "example": "Artem"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "userName": {
                "type": "string",
                "description": "User's name",
                "example": "Artem"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Authentication token",
            "example": "eyJhbGciOiJIUzI1N5cCI6IkpXVCJ9.eyJpZCI6IjY0ZDRiNjQ3NWNlN2E5N2M5YWI3MzJjYyIsImlhdCI6MTY5MTY4MzQzMjoxNjkxNzY2MjMxfQ.fSfADazWYfA3KK0GAlThxhJ1irmvwp0YLkqXY"
          },
          "user": {
            "type": "object",
            "properties": {
              "userName": {
                "type": "string",
                "description": "User's name",
                "example": "Artem"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "phone": {
                "type": "string",
                "description": "User's phone",
                "example": "38 (097) 256 34 77"
              },
              "birthday": {
                "type": "string",
                "description": "User's birthday",
                "example": "1995-08-12"
              },
              "skype": {
                "type": "string",
                "description": "User's Skype",
                "example": "Add a skype number (string)"
              },
              "avatarURL": {
                "type": "string",
                "description": "URL of the user's avatar"
              }
            }
          }
        }
      },
      "GetUserInfo": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "description": "User's name",
            "example": "Artem"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "38 (097) 256 34 77"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "1995-08-12"
          },
          "skype": {
            "type": "string",
            "description": "User's Skype",
            "example": "Add a skype number (string)"
          },
          "avatarURL": {
            "type": "string",
            "description": "URL of the user's avatar"
          }
        }
      },
      "UpdateUserInfoRequest": {
        "type": "object",
        "required": ["userName", "email"],
        "properties": {
          "userName": {
            "type": "string",
            "description": "User's name",
            "example": "Artem"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "38 (097) 256 34 77"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "1995-08-12"
          },
          "skype": {
            "type": "string",
            "description": "User's Skype",
            "example": "Add a skype number (string)"
          }
        }
      },
      "UpdateUserInfoResponse": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "description": "Updated user's name",
            "example": "Artem"
          },
          "email": {
            "type": "string",
            "description": "Updated user's email",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "description": "Updated user's phone",
            "example": "38 (097) 256 34 77"
          },
          "birthday": {
            "type": "string",
            "description": "Updated user's birthday",
            "example": "1995-08-12"
          },
          "skype": {
            "type": "string",
            "description": "Updated user's Skype",
            "example": "Add a skype number (string)"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
